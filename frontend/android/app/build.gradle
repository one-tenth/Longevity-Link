// android/app/build.gradle  專案
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply plugin: "com.facebook.react.rootproject"



//讀取.env
import java.util.Properties
def env = rootProject.ext.env
println("GOOGLE_MAPS_API_KEY in app build.gradle: " + env.getProperty("GOOGLE_MAPS_API_KEY", "NOT FOUND"))

project.ext.react = [
    entryFile: file("./index.js"),
]




// fcm
apply plugin: 'com.google.gms.google-services' // ← 若使用 Firebase 再打開

// ✅ 加入字型插件（最重要）
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

react {
    autolinkLibrariesWithApp()
}

def enableProguardInReleaseBuilds = false

def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "com.frontend"
    defaultConfig {
        applicationId "com.frontend"
        minSdkVersion 24
        targetSdkVersion 35
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [
            GOOGLE_MAPS_API_KEY: env.getProperty("GOOGLE_MAPS_API_KEY", "")
        ]

     
    }
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    task generateGoogleMapsApiXml {
        def envApiKey = rootProject.ext.env.getProperty("GOOGLE_MAPS_API_KEY", "")
        def resDir = file("$projectDir/src/main/res/values")
        def xmlFile = file("$resDir/google_maps_api.xml")

        doLast {
            if (!resDir.exists()) {
                resDir.mkdirs()
            }

            def content = """<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="google_maps_key">${envApiKey}</string>
</resources>
"""
            xmlFile.text = content
            println("Generated google_maps_api.xml with key: ${envApiKey}")
        }
    }

    preBuild.dependsOn generateGoogleMapsApiXml
    
}


dependencies {
    implementation("com.facebook.react:react-android")
    implementation 'com.google.android.gms:play-services-auth:21.2.0'

    //定位
    
    implementation 'com.google.android.gms:play-services-location:21.3.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'com.google.android.gms:play-services-maps:18.1.0'


    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }

    // implementation project(':react-native-maps')

}

