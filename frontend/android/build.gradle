// android/build.gradle  ← 根專案

import java.util.Properties

def envFile = rootProject.file("../.env")

println("Reading env from: " + envFile.absolutePath)

def env = new Properties()
if (envFile.exists()) {
    env.load(new FileInputStream(envFile))
    println("GOOGLE_MAPS_API_KEY from .env: " + env.getProperty("GOOGLE_MAPS_API_KEY", "NOT FOUND"))
} else {
    println("**************************")
    println("*** Missing .env file ****")
    println("**************************")
}

// 把 env 物件放進 project.ext 供子模組使用
project.ext.env = env

buildscript {
    ext {
        buildToolsVersion = "35.0.0"
        minSdkVersion = 24
        compileSdkVersion = 35
        targetSdkVersion = 35
        ndkVersion = "27.1.12297006"
        kotlinVersion = "2.0.21"
    }
    repositories {
        google()
        mavenCentral()
        maven { url 'https://www.jitpack.io' }
        // Background Fetch 所需的 repo
        maven  { url("${project(':react-native-background-fetch').projectDir}/libs") }
    }
    dependencies {
        // 版本由 settings.gradle 的 pluginManagement 管理，這裡保留座標即可
        classpath("com.android.tools.build:gradle")
        classpath("com.facebook.react:react-native-gradle-plugin")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin")
        // 只放在 classpath，**不要在根專案 apply**，真正的 apply 放到 app 模組
        classpath("com.google.gms:google-services:4.3.15")
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        //套件的正確版本
        maven { url("${project(':react-native-background-geolocation').projectDir}/libs") }
        maven { url("${project(':react-native-background-fetch').projectDir}/libs") }
 
    }
}

// 強制所有子模組使用相同的 play-services-location 版本
subprojects {
    project.configurations.all {
        resolutionStrategy {
            force "com.google.android.gms:play-services-location:20.0.0"
        }
    }
}

apply plugin: "com.facebook.react.rootproject"



newArchEnabled=false
